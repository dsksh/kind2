
node N1 (in1, in2: bool) returns (out: bool)
(*@contract
  assume in1;
  assume in2;
  guarantee out;
*)
let
  out = in1 and in2;
tel

node N2 (in: bool) returns (out: bool)
(*@contract
  assume in;
  guarantee out;
*)
let
  out = true -> pre in;
tel

node Nest (in_n: bool) returns (out: bool)
(*@contract
  assume in_n;
  guarantee out;
*)
var fb_n: bool;
let
  out = N1(in_n, fb_n);
  fb_n = N2(out);
tel

node Toplevel (_: bool) returns (out: bool)
(*@contract
  guarantee out;
*)
var fb: bool;
let
  out = Nest(fb);
  fb  = N2(out);

  --%MAIN;
  --%PROPERTY out;
tel

-- eof
