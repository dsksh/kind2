node Filter(in1: bool; in2: real) returns (out1: bool; out2: real);
(*@contract
  assume in1;
  assume -1.0 <= in2 and in2 <= 1.0 ;
  guarantee out1;
  guarantee -1.0 < out2 and out2 < 1.0 ; -- valid (at 25)
*)
var sum, D1, D2: real;
let
  out1 = in1;

  sum = 0.0582*in2 - (-1.49*D1) - 0.881*D2;
  D1 = 0.0 -> pre sum;
  D2 = 0.0 -> pre D1;
  out2 = (sum - D2) / 1.25;

  -- MAIN ;
tel

node Toplevel (in : real) returns (out : real);
(*@contract
  assume -1.0 <= in and in <= 1.0 ;
  guarantee -1.0 <= out and out <= 1.0 ;
  -- 3: at >32 after >600s / 2+7Gs, 14.9s (wall), 34.2s (user)
*)
var fb: bool;
var b1: bool; r1: real; -- 2
var b2: bool; r2: real; -- 3
let
  b1, r1 = Filter(fb, in);
  b2, r2 = Filter(b1, r1);
  fb, out = Filter(true -> pre b2, r2);

  --%MAIN ;
tel

-- eof