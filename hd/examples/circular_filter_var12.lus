node Filter(in1: bool; in2: real) returns (out1: bool; out2: real);
(*@contract
  assume in1;
  assume -1.0 <= in2 and in2 <= 1.0 ;
  guarantee out1;
  guarantee -1.0 < out2 and out2 < 1.0 ; -- valid (at 25)
*)
var sum, D1, D2: real;
let
  out1 = in1;

  sum = 0.0582*in2 - (-1.49*D1) - 0.881*D2;
  D1 = 0.0 -> pre sum;
  D2 = 0.0 -> pre D1;
  out2 = (sum - D2) / 1.25;

  -- MAIN ;
tel

node Toplevel (in : real) returns (out : real);
(*@contract
  assume -1.0 <= in and in <= 1.0 ;
  guarantee -1.0 <= out and out <= 1.0 ;
  -- 12: >600s / 2+25Gs, 14.9s (wall), 34.7s (user)
*)
var fb: bool;
var b1: bool; r1: real; -- 2
var b2: bool; r2: real; -- 3
var b3: bool; r3: real;
var b4: bool; r4: real;
var b5: bool; r5: real;
var b6: bool; r6: real;
var b7: bool; r7: real;
var b8: bool; r8: real;
var b9: bool; r9: real;
var b10: bool; r10: real;
var b11: bool; r11: real; -- 12
let
  b1, r1 = Filter(fb, in);
  b2, r2 = Filter(b1, r1);
  b3, r3 = Filter(b2, r2);
  b4, r4 = Filter(b3, r3);
  b5, r5 = Filter(b4, r4);
  b6, r6 = Filter(b5, r5);
  b7, r7 = Filter(b6, r6);
  b8, r8 = Filter(b7, r7);
  b9, r9 = Filter(b8, r8);
  b10, r10 = Filter(b9, r9);
  b11, r11 = Filter(b10, r10);
  fb, out = Filter(true -> pre b11, r11);

  --%MAIN ;
tel

-- eof